@use '../variables'; // Importar vari치veis
@use 'sass:math'; // Importar m칩dulo math

/* Sistema de Grid */
.container {
    width: 100%;
    max-width: variables.$container-width;
    margin-left: auto;
    margin-right: auto;
    padding-left: variables.$container-padding;
    padding-right: variables.$container-padding;
    
    &-fluid {
        max-width: 100%;
    }
    
    @media (min-width: #{variables.$breakpoint-sm}) {
        max-width: 540px;
    }
    
    @media (min-width: #{variables.$breakpoint-md}) {
        max-width: 720px;
    }
    
    @media (min-width: #{variables.$breakpoint-lg}) {
        max-width: 960px;
    }
    
    @media (min-width: #{variables.$breakpoint-xl}) {
        max-width: variables.$container-width;
    }
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -(variables.$container-padding);
    margin-left: -(variables.$container-padding);
}

// Colunas b치sicas
[class^="col-"] {
    position: relative;
    width: 100%;
    padding-right: variables.$container-padding;
    padding-left: variables.$container-padding;
}

// Sistema de colunas de 12 unidades
@for $i from 1 through 12 {
    .col-#{$i} {
        flex: 0 0 math.percentage(math.div($i, 12));
        max-width: math.percentage(math.div($i, 12));
    }
}

// Breakpoints responsivos - SM
@media (min-width: #{variables.$breakpoint-sm}) {
    @for $i from 1 through 12 {
        .col-sm-#{$i} {
            flex: 0 0 math.percentage(math.div($i, 12));
            max-width: math.percentage(math.div($i, 12));
        }
    }
}

// Breakpoints responsivos - MD
@media (min-width: #{variables.$breakpoint-md}) {
    @for $i from 1 through 12 {
        .col-md-#{$i} {
            flex: 0 0 math.percentage(math.div($i, 12));
            max-width: math.percentage(math.div($i, 12));
        }
    }
}

// Breakpoints responsivos - LG
@media (min-width: #{variables.$breakpoint-lg}) {
    @for $i from 1 through 12 {
        .col-lg-#{$i} {
            flex: 0 0 math.percentage(math.div($i, 12));
            max-width: math.percentage(math.div($i, 12));
        }
    }
}

// Breakpoints responsivos - XL
@media (min-width: #{variables.$breakpoint-xl}) {
    @for $i from 1 through 12 {
        .col-xl-#{$i} {
            flex: 0 0 math.percentage(math.div($i, 12));
            max-width: math.percentage(math.div($i, 12));
        }
    }
}

// Utilit치rios de alinhamento
.justify-content-start { justify-content: flex-start; }
.justify-content-end { justify-content: flex-end; }
.justify-content-center { justify-content: center; }
.justify-content-between { justify-content: space-between; }
.justify-content-around { justify-content: space-around; }

.align-items-start { align-items: flex-start; }
.align-items-end { align-items: flex-end; }
.align-items-center { align-items: center; }
.align-items-baseline { align-items: baseline; }
.align-items-stretch { align-items: stretch; }

// Sistema de grid com CSS Grid
.grid {
    display: grid;
    gap: variables.$gutter;
    
    &-2 {
        grid-template-columns: 1fr;
        
        @media (min-width: #{variables.$breakpoint-md}) {
            grid-template-columns: repeat(2, 1fr);
        }
    }
    
    &-3 {
        grid-template-columns: 1fr;
        
        @media (min-width: #{variables.$breakpoint-md}) {
            grid-template-columns: repeat(2, 1fr);
        }
        
        @media (min-width: #{variables.$breakpoint-lg}) {
            grid-template-columns: repeat(3, 1fr);
        }
    }
    
    &-4 {
        grid-template-columns: 1fr;
        
        @media (min-width: #{variables.$breakpoint-md}) {
            grid-template-columns: repeat(2, 1fr);
        }
        
        @media (min-width: #{variables.$breakpoint-lg}) {
            grid-template-columns: repeat(4, 1fr);
        }
    }
    
    &-auto-fit {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
} 